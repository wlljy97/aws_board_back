<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.korit.board.repository.BoardMapper">

    <resultMap  id="boardCategoryMap"           type="com.korit.board.entity.BoardCategory">
        <id     property="boardCategoryId"      column="board_category_id" />
        <result property="boardCategoryName"    column="board_category_name" />
        <result property="boardCount"           column="board_count" />
    </resultMap>

    <resultMap  id="boardMap"                   type="com.korit.board.entity.Board">
        <id     property="boardId"              column="board_id" />
        <result property="boardTitle"           column="board_title" />
        <result property="boardContent"         column="board_content" />
        <result property="email"                column="email" />
        <result property="nickname"             column="nickname" />
        <result property="createDate"           column="create_date" />
        <result property="boardHitsCount"       column="board_hits_count" />
        <result property="boardLikeCount"       column="board_like_count" />
    </resultMap>


    <select id="getBoardCategories" resultMap="boardCategoryMap">
        SELECT
            bct.board_category_id,
            bct.board_category_name,
            count(bt.board_category_id) as board_count
        FROM
            board_category_tb bct
            left outer join board_tb bt on(bt.board_category_id = bct.board_category_id)
        group by
            bct.board_category_id,
            bct.board_category_name
    </select>
    <select id="getBoardList"
            resultMap="boardMap"
            parameterType="hashmap">
        select
            bt.board_id,
            bt.board_title,
            bt.email,
            ut.nickname,
            bt.create_date,
            bhc.board_hits_count,
            blc.board_like_count
        from
            board_tb bt
            left outer join user_tb ut on(ut.email = bt.email)
            left outer join (select
                                board_id,
                                count(*) as board_hits_count
                            from
                                board_hits_tb
                            group by
                                board_id) bhc on(bhc.board_id = bt.board_id)
        left outer join (select
                            board_id,
                            count(*) as board_like_count
                        from
                            board_like_tb
                        group by
                            board_id) blc on(blc.board_id = bt.board_id)
        where
            1 = 1 <!--  무조건 동작 하게 해줌  (무조건 참)  -->
            <if test="!categoryName.equals('all')">
                and bt.board_category_id = (
                    select
                        board_category_id
                    from
                        board_category_tb
                    where
                        board_category_name = #{categoryName}
                )
            </if>
            <choose>
                <when test="optionName.equals('제목')">
                    and bt.board_title like concat("%", #{searchValue}, "%")
                </when>
                <when test="optionName.equals('작성자')">
                    and ut.nickname like concat("%", #{searchValue}, "%")
                </when>
                <otherwise> <!-- 둘중에 하나라도 검색하면 조회  -->
                    and (
                    bt.board_title like concat("%", #{searchValue}, "%")
                    or ut.nickname like concat("%", #{searchValue}, "%")
                    )
                </otherwise>
            </choose>
        order by
            board_id desc
        limit #{index}, 10
    </select>

    <insert id="saveCategory"
            parameterType="com.korit.board.entity.BoardCategory"
            useGeneratedKeys="true"
            keyProperty="boardCategoryId">
        insert into board_category_tb
        values(0, #{boardCategoryName})
    </insert>

    <insert id="saveBoard" parameterType="com.korit.board.entity.Board">
        insert into board_tb
        values(0, #{boardTitle}, #{boardCategoryId}, #{boardContent}, #{email}, now())

    </insert>



</mapper>